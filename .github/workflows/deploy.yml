name: Deploy to S3 + CloudFront (diagnostic)

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Show env & files
        run: |
          echo "Node:"
          node -v
          echo "npm:"
          npm -v
          echo "Repo root:"
          ls -la
          echo "package.json:"
          cat package.json

      - name: Verify Vite present
        run: |
          npm ls vite || true
          npx vite --version || true
          npm ls @vitejs/plugin-react || true

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build

      - name: Verify dist/
        run: |
          echo "Listing dist/"
          ls -la dist || (echo "❌ dist/ missing — build step failed" && exit 1)

      - name: Configure AWS credentials (access keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # optional
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup AWS CLI
        uses: aws-actions/setup-aws-cli@v2

      - name: Who am I? (STS)
        run: aws sts get-caller-identity

      - name: Echo targets
        run: |
          echo "Region:       ${{ secrets.AWS_REGION }}"
          echo "Bucket name:  ${{ secrets.S3_BUCKET }}"
          echo "Distribution: ${{ secrets.DISTRIBUTION_ID }}"

      - name: Check bucket exists and region
        run: |
          set -e
          aws s3api head-bucket --bucket "${{ secrets.S3_BUCKET }}" || (echo "❌ Bucket not accessible" && exit 1)
          echo "--- bucket location ---"
          aws s3api get-bucket-location --bucket "${{ secrets.S3_BUCKET }}" || true

      - name: Sync to S3 (hosting bucket)
        run: |
          set -e
          echo "--- syncing dist/ to s3://${{ secrets.S3_BUCKET }} ---"
          aws s3 sync dist/ "s3://${{ secrets.S3_BUCKET }}" --delete --region "${{ secrets.AWS_REGION }}" --only-show-errors
          echo "✅ sync complete"

      - name: Invalidate CloudFront
        run: |
          set -e
          echo "--- invalidating CloudFront ---"
          aws cloudfront create-invalidation --distribution-id "${{ secrets.DISTRIBUTION_ID }}" --paths "/*"
          echo "✅ invalidation requested"

        run: |
          aws cloudfront create-invalidation --distribution-id "${{ secrets.DISTRIBUTION_ID }}" --paths "/*"
